@using System.Linq
@model SportShop.Models.Order

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" onsubmit="return onSubmit()">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" disabled />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sum" class="control-label"></label>
                <input asp-for="Sum" type="number" class="form-control" min="0" />
                <span asp-validation-for="Sum" class="text-danger"></span>
            </div>

            @for (int i = 0; i < Model.OrderProducts.Count(); ++i)
            {
                <fieldset>
                    @Html.HiddenFor(m => m.OrderProducts[i].OrderId)
                    @Html.HiddenFor(m => m.OrderProducts[i].ProductId)
                    <div class="form-group">
                        <span>Product Id @Model.OrderProducts.ElementAt(i).ProductId</span>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.OrderProducts[i].Quantity)
                        @Html.TextBoxFor(m => m.OrderProducts[i].Quantity, new { @class = "form-control quantity", @type = "number", @min = "0", @max = "5" })
                        @Html.ValidationMessageFor(m => m.OrderProducts[i].Quantity)
                    </div>
                </fieldset>
            }
            <div>
                <span id="invalid-order"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript">
    const onSubmit = () => {
        let sum = 0;

        $(".quantity").each(function (index, element) {
            sum += parseInt(element.value);
        })

        if (sum !== 0) {
            return true;
        }

        $("#invalid-order").text("Order must containe at least one product!");
        return false;
    };
</script>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
} 